var uploadHBR = function() { var e, a = 6,
        t = "Tambah",
        n = "Klik atau seret foto ke sini",
        i = "Klik di sini untuk menghapus foto",
        s = "fa fa-camera",
        d = "fa fa-times",
        r = ["image/jpg", "image/jpeg", "image/png"],
        o = 0;

    function l(a) { var t = $(a).attr("data-index");
        $(e + " #base64_" + t).val(""), $(e + " #new_" + t).removeClass("d-none"), $(e + " #prev_" + t).addClass("d-none"), $(e + " #prev_" + t).find("img").attr("src", ""), $(a).find(".uploadArea").removeClass("selected"), $(a).removeClass("selected") }

    function c() { var a = null,
            t = document.querySelectorAll("#columns .column");

        function n(a, t) { var n = new FileReader;
            n.onload = function(a) { $(e + " #prev_" + t).find("img").attr("src", a.target.result), $(e + " #prev_" + t).removeClass("d-none"), $(e + " #new_" + t).addClass("d-none"), $(e + " #base64_" + t).val(a.target.result).change() }, n.readAsDataURL(a) }

        function i(a) { var t = 0;
            $.each(a, function(a, i) { $.each(r, function(s, d) { if (void 0 !== $(e + " #base64_" + a).val() && d === i.type)
                        if (parseInt($(e + " #base64_" + a).val().length) > 0)
                            for (var r = 0, o = t + 1; o < $(e + ' .image').length; o++) r || 0 !== parseInt($(e + " #base64_" + o).val().length) || (n(i, o), t = o, r++);
                        else n(i, a) }) }) }

        function s() { $(e + " .remove").click(function() { l(this) }), $(e + " .new").click(function() { document.getElementById("hidden_" + $(this).attr("data-index")).click() }), $(e + " .fileHidden").change(function() { i(this.files) }), $(e + " .uploadArea").on("dragend", function() { $(this).removeClass("selected") }), $(e + " .uploadArea").on("dragleave", function() { $(this).removeClass("selected") }), $(e + " .uploadArea").on("dragstart", function() { $(this).addClass("selected") }), $(e + " .uploadArea").on("dragover", function(e) { e.preventDefault(), e.stopPropagation(), $(this).addClass("selected") }), $(e + " .uploadArea").on("dragenter", function(e) { e.preventDefault(), e.stopPropagation(), $(this).addClass("selected") }), $(e + " .uploadArea").on("drop", function(e) { $(this).removeClass("selected"), e.originalEvent.dataTransfer && e.originalEvent.dataTransfer.files.length && (e.preventDefault(), e.stopPropagation(), i(e.originalEvent.dataTransfer.files)) }) }

        function d(a) { return a.preventDefault && a.preventDefault(), $(e + " .column").css("opacity", 1), $(this).find(".uploadArea").addClass("selected"), a.dataTransfer.dropEffect = "move", !1 }

        function o(e) {
            [].forEach.call(t, function(e) { e.classList.remove("over") }) }

        function c(e) { this.classList.add("over"), e.preventDefault(), e.stopPropagation() }

        function u(a) { this.classList.remove("over"), $(e + " .uploadArea").removeClass("selected") }

        function f(e) { this.style.opacity = "0.4", a = this, e.dataTransfer.effectAllowed = "move", e.dataTransfer.setData("text/html", this.innerHTML) }

        function v(t) { t.stopPropagation && t.stopPropagation(), null !== a && a !== this && (a.innerHTML = this.innerHTML, this.innerHTML = t.dataTransfer.getData("text/html"), $(e + " .uploadArea").removeClass("selected"), $(e + " .column").css("opacity", 1)), s() }[].forEach.call(t, function(e) { e.addEventListener("dragstart", f, !1), e.addEventListener("dragenter", c, !1), e.addEventListener("dragover", d, !1), e.addEventListener("dragleave", u, !1), e.addEventListener("drop", v, !1), e.addEventListener("dragend", o, !1) }), s() } return { init: function(l) { Modernizr.draganddrop ? (void 0 !== l.max && (a = parseInt(l.max)), void 0 !== l.textNew && (t = l.textNew), void 0 !== l.textTitle && (n = l.textTitle), void 0 !== l.textTitle && (n = l.textTitle), void 0 !== l.mimes && (r = l.mimes), void 0 !== l.start && (o = l.start), function(l) { e = l.target; var c, u, f = $(l.target); if (f.length > 0)
                    for (f.html(""); o < a; o++) f.append((c = o, u = r.join(","), '<div class="box-drag column" draggable="true"><input type="hidden" class="image" id="base64_' + c + '" data-id="' + c + '"><div class="form-group"><div class="col-md-12 no-padding uploadArea" data-index="' + c + '"><span class="new" id="new_' + c + '" title="' + n + '" data-index="' + c + '"><input type="file" name="image" class="fileHidden d-none" accept="' + u + '" id="hidden_' + c + '" data-index="' + c + '"><i class="' + s + '"></i><p>' + t + '</p></span><span class="image-preview d-none" id="prev_' + c + '"><div class="remove" title="' + i + '" data-index="' + c + '"><i class="' + d + '"></i></div><img class="img-responsive" src=""></span></div></div></div>'));
                else console.log("Target not found : " + l.target) }(l), c()) : console.log("Modernizr not enabled") }, reset: function(e) { var a = $(e);
            a.length > 0 ? $.each($(a).find(".uploadArea"), function(e, a) { l(this) }) : console.log("Target not found : " + e) } } }();